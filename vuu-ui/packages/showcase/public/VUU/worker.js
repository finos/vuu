var K=console,D={},T=Symbol("setWebsocket"),I=Symbol("connectionCallback");async function H(o,e){return x(o,e)}async function _(o){x(o.url,o[I],o)}async function x(o,e,t){let s=D[o]||(D[o]={attemptsRemaining:5,status:"disconnected"});try{e({type:"connection-status",status:"connecting"});let r=typeof t<"u",n=await Te(o);console.log(`%c\u26A1 %c${o}`,"font-size: 24px;color: green;font-weight: bold;","color:green; font-size: 14px;"),t!==void 0&&t[T](n);let a=t??new v(n,o,e),i=r?"reconnected":"connected";return e({type:"connection-status",status:i}),a.status=i,a}catch{let n=--s.attemptsRemaining>0;if(e({type:"connection-status",status:"disconnected",reason:"failed to connect",retry:n}),n)return _e(o,e,t,1e4)}}var _e=(o,e,t,s)=>new Promise(r=>{setTimeout(()=>{r(x(o,e,t))},s)}),Te=o=>new Promise((e,t)=>{let s=new WebSocket("ws://"+o);s.onopen=()=>e(s),s.onerror=r=>t(r)}),G=()=>{K.log("Connection cannot be closed, socket not yet opened")},q=o=>{K.log(`Message cannot be sent, socket closed: ${o.body.type}`)},ve=o=>{try{return JSON.parse(o)}catch{throw Error(`Error parsing JSON response from server ${o}`)}},v=class{[I];close=G;requiresLogin=!0;send=q;status="ready";url;constructor(e,t,s){this.url=t,this[I]=s,this[T](e)}reconnect(){_(this)}[T](e){let t=this[I];e.onmessage=n=>{let a=ve(n.data);t(a)},e.onerror=()=>{console.log(`%c\u26A1 %c${this.url}`,"font-size: 24px;color: red;font-weight: bold;","color:red; font-size: 14px;"),t({type:"connection-status",status:"disconnected",reason:"error"}),this.status!=="closed"&&(_(this),this.send=r)},e.onclose=()=>{console.log(`%c\u26A1 %c${this.url}`,"font-size: 24px;color: orange;font-weight: bold;","color:orange; font-size: 14px;"),t({type:"connection-status",status:"disconnected",reason:"close"}),this.status!=="closed"&&(_(this),this.send=r)};let s=n=>{e.send(JSON.stringify(n))},r=n=>{console.log(`queuing message ${JSON.stringify(n)} until websocket reconnected`)};this.send=s,this.close=()=>{console.log("[Connection] close websocket"),this.status="closed",e.close(),this.close=G,this.send=q}}};var $="CHANGE_VP",J="CHANGE_VP_SUCCESS",U="CHANGE_VP_RANGE",z="CHANGE_VP_RANGE_SUCCESS",Q="CLOSE_TREE_NODE",Y="CLOSE_TREE_SUCCESS";var O="CREATE_VISUAL_LINK",j="CREATE_VISUAL_LINK_SUCCESS",X="CREATE_VP",Z="CREATE_VP_SUCCESS",ee="DISABLE_VP",te="DISABLE_VP_SUCCESS";var se="ENABLE_VP",ne="ENABLE_VP_SUCCESS";var re="GET_TABLE_LIST",ie="GET_TABLE_META",oe="GET_VP_VISUAL_LINKS",ae="GET_VIEW_PORT_MENUS",ue="VIEW_PORT_MENUS_RESP";var P="VIEW_PORT_MENU_RESP";var le="HB",ce="HB_RESP",pe="LOGIN",ge="LOGIN_SUCCESS",de="OPEN_TREE_NODE",he="OPEN_TREE_SUCCESS";var fe="REMOVE_VP",Ve="REMOVE_VP_SUCCESS";var Ce="RPC_CALL",L="RPC_RESP";var Ee="SET_SELECTION",Ie="SET_SELECTION_SUCCESS",A="TABLE_META_RESP",N="TABLE_LIST_RESP",be="VP_VISUAL_LINKS_RESP",Se="TABLE_ROW";var b=class{keys;free;nextKeyValue;constructor(e){this.keys=new Map,this.free=[],this.nextKeyValue=0,this.reset(e)}next(){return this.free.length>0?this.free.pop():this.nextKeyValue++}reset({from:e,to:t}){this.keys.forEach((r,n)=>{(n<e||n>=t)&&(this.free.push(r),this.keys.delete(n))});let s=t-e;this.keys.size+this.free.length>s&&(this.free.length=s-this.keys.size);for(let r=e;r<t;r++)if(!this.keys.has(r)){let n=this.next();this.keys.set(r,n)}}keyFor(e){let t=this.keys.get(e);if(t===void 0)throw Error(`KeySet, no key found for rowIndex ${e}`);return t}};var xe={Enter:"Enter",Delete:"Delete"},Ue={Home:"Home",End:"End",ArrowRight:"ArrowRight",ArrowLeft:"ArrowLeft",ArrowDown:"ArrowDown",ArrowUp:"ArrowUp",Tab:"Tab"},Oe={F1:"F1",F2:"F2",F3:"F3",F4:"F4",F5:"F5",F6:"F6",F7:"F7",F8:"F8",F9:"F9",F10:"F10",F11:"F11",F12:"F12"},Qe={...xe,...Ue,...Oe};function F({from:o,to:e},t=0,s=Number.MAX_SAFE_INTEGER){if(t===0)return{from:o,to:Math.min(e,s)};if(o===0)return{from:o,to:Math.min(e+t,s)};{let r=e-o,n=Math.round(t/2),a=o-n<0,i=s-(e+n)<0;return a&&i?{from:0,to:s}:a?{from:0,to:r+t}:i?{from:Math.max(0,s-(r+t)),to:s}:{from:o-n,to:e+n}}}var h=class{from;to;constructor(e,t){this.from=e,this.to=t}isWithin(e){return e>=this.from&&e<this.to}overlap(e,t){return e>=this.to||t<this.from?[0,0]:[Math.max(e,this.from),Math.min(t,this.to)]}copy(){return new h(this.from,this.to)}};var S=(o,e,t,s)=>{let r=s*.25;return!o||!s||o.to-t<r?!0:o.from>0&&e-o.from<r};var y=[],M=class{bufferSize;range;internalData;rowsWithinRange;clientRange;rowCount;constructor({from:e,to:t},{from:s,to:r},n){this.bufferSize=n,this.clientRange=new h(e,t),this.range=new h(s,r),this.internalData=new Array(n),this.rowsWithinRange=0,this.rowCount=0}get hasAllRowsWithinRange(){return this.rowsWithinRange===this.clientRange.to-this.clientRange.from||this.rowCount>0&&this.rowsWithinRange===this.rowCount}setRowCount=e=>{if(e<this.internalData.length&&(this.internalData.length=e),e<this.rowCount){this.rowsWithinRange=0;let t=Math.min(e,this.clientRange.to);for(let s=this.clientRange.from;s<t;s++){let r=s-this.range.from;this.internalData[r]!==void 0&&(this.rowsWithinRange+=1)}}this.rowCount=e};setAtIndex(e,t){let s=this.isWithinClientRange(e);if(s||this.isWithinRange(e)){let r=e-this.range.from;!this.internalData[r]&&s&&(this.rowsWithinRange+=1),this.internalData[r]=t}return s}getAtIndex(e){return this.range.isWithin(e)&&this.internalData[e-this.range.from]!=null?this.internalData[e-this.range.from]:void 0}isWithinRange(e){return this.range.isWithin(e)}isWithinClientRange(e){return this.clientRange.isWithin(e)}setClientRange(e,t){let s=this.clientRange.from,r=Math.min(this.clientRange.to,this.rowCount);if(e===s&&t===r)return[!1,y,y];let n=this.clientRange.copy();this.clientRange.from=e,this.clientRange.to=t,this.rowsWithinRange=0;for(let l=e;l<t;l++){let p=l-this.range.from;this.internalData[p]&&(this.rowsWithinRange+=1)}let a=y,i=y,u=this.range.from;if(this.hasAllRowsWithinRange)if(t>n.to){let l=Math.max(e,n.to);a=this.internalData.slice(l-u,t-u)}else{let l=Math.min(n.from,t);a=this.internalData.slice(e-u,l-u)}else if(this.rowsWithinRange>0)if(t>n.to){let l=Math.max(e,n.to);i=this.internalData.slice(l-u,t-u).filter(p=>!!p)}else{let l=Math.max(n.from,t);i=this.internalData.slice(Math.max(0,e-u),l-u).filter(p=>!!p)}return[S(this.range,e,t,this.bufferSize),a,i]}setRange(e,t){let[s,r]=this.range.overlap(e,t),n=new Array(t-e+this.bufferSize);this.rowsWithinRange=0;for(let a=s;a<r;a++){let i=this.getAtIndex(a);if(i){let u=a-e;n[u]=i,this.isWithinClientRange(a)&&(this.rowsWithinRange+=1)}}this.internalData=n,this.range.from=e,this.range.to=t}getData(){let{from:e,to:t}=this.range,{from:s,to:r}=this.clientRange,n=Math.max(0,s-e),a=Math.min(t-e,t,r-e,this.rowCount??t);return this.internalData.slice(n,a)}};var Le=[],Ae=[],Ne=([o],[e])=>o-e,m=class{aggregations;bufferSize;clientRange;columns;dataWindow=void 0;disabled=!1;filter;filterSpec;groupBy;hasUpdates=!1;holdingPen=[];keys;lastTouchIdx=null;links=[];linkedParent=null;pendingLinkedParent;pendingOperations=new Map;pendingRangeRequest=null;rowCountChanged=!1;sort;clientViewportId;isTree=!1;serverViewportId;status="";suspended=!1;table;constructor({viewport:e,tablename:t,aggregations:s,columns:r,range:n,bufferSize:a=50,filter:i="",filterQuery:u="",sort:c=[],groupBy:l=[],visualLink:p}){this.clientViewportId=e,this.table=t,this.aggregations=s,this.columns=r,this.clientRange=n,this.bufferSize=a,this.sort={sortDefs:c},this.groupBy=l,this.filterSpec={filter:u},this.filter=i,this.keys=new b(n),this.pendingLinkedParent=p}get hasUpdatesToProcess(){return this.suspended?!1:this.rowCountChanged||this.hasUpdates}subscribe(){return{type:X,table:this.table,range:F(this.clientRange,this.bufferSize),aggregations:this.aggregations,columns:this.columns,sort:this.sort,groupBy:this.groupBy,filterSpec:this.filterSpec}}handleSubscribed({viewPortId:e,aggregations:t,columns:s,range:r,sort:n,groupBy:a,filterSpec:i}){return this.serverViewportId=e,this.status="subscribed",this.aggregations=t,this.columns=s,this.groupBy=a,this.filterSpec=i,this.isTree=a&&a.length>0,this.dataWindow=new M(this.clientRange,r,this.bufferSize),console.log(`%cViewport subscribed
        clientVpId: ${this.clientViewportId}
        serverVpId: ${this.serverViewportId}
        table: ${this.table}
        aggregations: ${JSON.stringify(t)}
        columns: ${s.join(",")}
        range: ${JSON.stringify(r)}
        sort: ${JSON.stringify(n)}
        groupBy: ${JSON.stringify(a)}
        filterSpec: ${JSON.stringify(i)}
        bufferSize: ${this.bufferSize}
      `,"color: blue"),{type:"subscribed",clientViewportId:this.clientViewportId,columns:s,filter:this.filter,filterSpec:this.filterSpec}}awaitOperation(e,t){this.pendingOperations.set(e,t)}completeOperation(e,...t){let{clientViewportId:s,pendingOperations:r}=this,{type:n,data:a}=r.get(e);if(r.delete(e),n===U){let[i,u]=t;this.dataWindow?.setRange(i,u),this.pendingRangeRequest=null}else{if(n==="groupBy")return this.isTree=!0,this.groupBy=a,{clientViewportId:s,type:n,groupBy:a};if(n==="groupByClear")return this.isTree=!1,this.groupBy=[],{clientViewportId:s,type:"groupBy",groupBy:null};if(n==="filter")return this.filterSpec={filter:a.filterQuery},{clientViewportId:s,type:n,...a};if(n==="aggregate")return this.aggregations=a,{clientViewportId:s,type:n,aggregations:a};if(n==="sort")return this.sort={sortDefs:a},{clientViewportId:s,type:n,sort:a};if(n!=="selection"){if(n==="disable")return this.disabled=!0,{type:"disabled",clientViewportId:s};if(n==="enable")return this.disabled=!1,{type:"enabled",clientViewportId:s};if(n===O){let[i,u,c]=t;return this.linkedParent={colName:i,parentViewportId:u,parentColName:c},this.pendingLinkedParent=null,{type:"visual-link-created",clientViewportId:s,colName:i,parentViewportId:u,parentColName:c}}}}}rangeRequest(e,t){let s=U;if(this.dataWindow){let[r,n,a]=this.dataWindow.setClientRange(t.from,t.to),i=r&&S(this.pendingRangeRequest,t.from,t.to,this.bufferSize)?{type:s,viewPortId:this.serverViewportId,...F(t,this.bufferSize,this.dataWindow.rowCount)}:null;i&&(this.awaitOperation(e,{type:s}),this.pendingRangeRequest=i),this.keys.reset(this.dataWindow.clientRange);let u=([l])=>l<t.from||l>=t.to;this.holdingPen.some(u)&&(this.holdingPen=this.holdingPen.filter(([l])=>l>=t.from&&l<t.to));let c=this.isTree?B(this.groupBy,this.columns):k;return a.length&&a.forEach(l=>{this.holdingPen.push(c(l,this.keys))}),n.length?[i,n.map(l=>c(l,this.keys))]:[i]}else return[null]}setLinks(e){return this.links=e,[{type:"VP_VISUAL_LINKS_RESP",links:e,clientViewportId:this.clientViewportId},this.pendingLinkedParent]}setMenu(e){return{type:"VIEW_PORT_MENUS_RESP",menu:e,clientViewportId:this.clientViewportId}}createLink(e,t,s,r){let n={type:O,parentVpId:s,childVpId:this.serverViewportId,parentColumnName:r,childColumnName:t};return this.awaitOperation(e,n),n}suspend(){this.suspended=!0}resume(){return this.suspended=!1,this.currentData()}currentData(){let e=[];if(this.dataWindow){let t=this.dataWindow.getData(),{keys:s}=this,r=this.isTree?B(this.groupBy,this.columns):k;for(let n of t)n&&e.push(r(n,s))}return e}enable(e){return this.awaitOperation(e,{type:"enable"}),{type:se,viewPortId:this.serverViewportId}}disable(e){return this.awaitOperation(e,{type:"disable"}),{type:ee,viewPortId:this.serverViewportId}}filterRequest(e,t,s){return this.awaitOperation(e,{type:"filter",data:{filter:t,filterQuery:s}}),this.createRequest({filterSpec:{filter:s}})}aggregateRequest(e,t){return this.awaitOperation(e,{type:"aggregate",data:t}),this.createRequest({aggregations:t})}sortRequest(e,t){return this.awaitOperation(e,{type:"sort",data:t}),this.createRequest({sort:{sortDefs:t}})}groupByRequest(e,t=Ae){let s=t===Le?"groupByClear":"groupBy";return this.awaitOperation(e,{type:s,data:t}),this.createRequest({groupBy:t})}selectRequest(e,t){return this.awaitOperation(e,{type:"selection",data:t}),{type:Ee,vpId:this.serverViewportId,selection:t}}handleUpdate(e,t,s){this.dataWindow&&(this.dataWindow.rowCount!==s.vpSize&&(this.dataWindow.setRowCount(s.vpSize),this.rowCountChanged=!0),e==="U"&&this.dataWindow.setAtIndex(t,s)&&(this.hasUpdates=!0))}getNewRowCount=()=>{if(this.rowCountChanged&&this.dataWindow)return this.rowCountChanged=!1,this.dataWindow.rowCount};getClientRows(e){if(this.hasUpdates&&this.dataWindow){let t=this.dataWindow.getData(),{keys:s}=this,r=this.isTree?B(this.groupBy,this.columns):k,n=this.dataWindow.hasAllRowsWithinRange?this.holdingPen.splice(0):void 0,a=n||this.holdingPen;for(let i of t)i&&i.ts>=e&&a.push(r(i,s));return this.hasUpdates=!1,n&&n.sort(Ne)}}createRequest(e){return{type:$,viewPortId:this.serverViewportId,aggregations:this.aggregations,columns:this.columns,sort:this.sort,groupBy:this.groupBy,filterSpec:this.filterSpec,...e}}},k=({rowIndex:o,rowKey:e,sel:t,data:s},r)=>[o,r.keyFor(o),!0,null,null,1,e,t].concat(s),B=(o,e)=>({rowIndex:t,rowKey:s,sel:r,data:n},a)=>{let[i,u,,c,,l,...p]=n,V=s.split("|").slice(1);return o.forEach((d,E)=>{let w=e.indexOf(d);p[w]=V[E]}),[t,a.keyFor(t),c,u,i,l,s,r].concat(p)};var Me=o=>{switch(o){case"getUniqueFieldValues":return["TypeAheadRpcHandler","TYPEAHEAD"];default:return["OrderEntryRpcHandler","SIMUL"]}};var me=o=>o.type==="connection-status",Re=o=>"viewport"in o;var we=1;var g=()=>`${we++}`,Fe=[],ke={},Be=(o,e)=>{if(o==="MENU_RPC_CALL"&&e==="selected-rows")return"VIEW_PORT_MENUS_SELECT_RPC";throw Error("No RPC command for ${msgType} / ${context}")},R=class{connection;postMessageToClient;viewports;mapClientToServerViewport;authToken;pendingLogin;sessionId;queuedRequests=[];constructor(e,t){this.connection=e,this.postMessageToClient=t,this.viewports=new Map,this.mapClientToServerViewport=new Map}async login(e){e&&(this.authToken=e);let t=this.authToken;if(t===void 0)throw Error("ServerProxy login, cannot login until auth token has been obtained");return new Promise((s,r)=>{this.sendMessageToServer({type:pe,token:t,user:"user"},""),this.pendingLogin={resolve:s,reject:r}})}subscribe(e){if(this.mapClientToServerViewport.has(e.viewport))console.log(`ServerProxy spurious subscribe call ${e.viewport}`);else{let t=new m(e);this.viewports.set(e.viewport,t),this.sendIfReady(t.subscribe(),e.viewport,this.sessionId!=="")}}unsubscribe(e){let t=this.mapClientToServerViewport.get(e);t?this.sendMessageToServer({type:fe,viewPortId:t}):console.error(`ServerProxy: failed to unsubscribe client viewport ${e}`)}getViewportForClient(e){let t=this.mapClientToServerViewport.get(e);if(t){let s=this.viewports.get(t);if(s)return s;throw Error(`Viewport not found for client viewport ${e}`)}else throw Error(`Viewport server id not found for client viewport ${e}`)}setViewRange(e,t){let s=g(),[r,n]=e.rangeRequest(s,t.range);r&&this.sendIfReady(r,s,e.status==="subscribed"),n&&this.postMessageToClient({type:"viewport-updates",viewports:{[e.clientViewportId]:{rows:n}}})}aggregate(e,t){let s=g(),r=e.aggregateRequest(s,t.aggregations);this.sendIfReady(r,s,e.status==="subscribed")}sort(e,t){let s=g(),r=e.sortRequest(s,t.sortCriteria);this.sendIfReady(r,s,e.status==="subscribed")}groupBy(e,t){let s=g(),r=e.groupByRequest(s,t.groupBy);this.sendIfReady(r,s,e.status==="subscribed")}filter(e,t){let s=g(),{filter:r,filterQuery:n}=t,a=e.filterRequest(s,r,n);this.sendIfReady(a,s,e.status==="subscribed")}select(e,t){let s=g(),{selected:r}=t,n=e.selectRequest(s,r);this.sendIfReady(n,s,e.status==="subscribed")}disableViewport(e,t){let s=g(),r=e.disable(s);this.sendIfReady(r,s,e.status==="subscribed")}enableViewport(e,t){let s=g(),r=e.enable(s);this.sendIfReady(r,s,e.status==="subscribed")}resumeViewport(e){let t=e.resume();this.postMessageToClient({type:"viewport-updates",viewports:{[e.clientViewportId]:{rows:t}}})}openTreeNode(e,t){e.serverViewportId&&this.sendIfReady({type:de,vpId:e.serverViewportId,treeKey:t.key},g(),e.status==="subscribed")}closeTreeNode(e,t){e.serverViewportId&&this.sendIfReady({type:Q,vpId:e.serverViewportId,treeKey:t.key},g(),e.status==="subscribed")}createLink(e,t){let{parentVpId:s,parentColumnName:r,childColumnName:n}=t,a=g(),i=e.createLink(a,n,s,r);this.sendMessageToServer(i,a)}menuRpcCall(e,t){if(e.serverViewportId){let{context:s,rpcName:r}=t;this.sendMessageToServer({type:Be(t.type,s),rpcName:r,vpId:e.serverViewportId},t.requestId)}}rpcCall(e){let{method:t,requestId:s,type:r}=e,[n,a]=Me(t);this.sendMessageToServer({type:r,service:n,method:t,params:e.params,namedParams:{}},s,{module:a})}handleMessageFromClient(e){if(Re(e)){let t=this.getViewportForClient(e.viewport);switch(e.type){case"setViewRange":return this.setViewRange(t,e);case"aggregate":return this.aggregate(t,e);case"sort":return this.sort(t,e);case"groupBy":return this.groupBy(t,e);case"filterQuery":return this.filter(t,e);case"select":return this.select(t,e);case"suspend":return t.suspend();case"resume":return this.resumeViewport(t);case"disable":return this.disableViewport(t,e);case"enable":return this.enableViewport(t,e);case"openTreeNode":return this.openTreeNode(t,e);case"closeTreeNode":return this.closeTreeNode(t,e);case"createLink":return this.createLink(t,e);case"MENU_RPC_CALL":return this.menuRpcCall(t,e);default:}}else{let{type:t,requestId:s}=e;switch(t){case re:return this.sendMessageToServer({type:t},s);case ie:return this.sendMessageToServer({type:t,table:e.table},s);case Ce:return this.rpcCall(e);default:}}console.log(`Vuu ServerProxy Unexpected message from client ${JSON.stringify(e)}`)}sendIfReady(e,t,s=!0,r){return s?this.sendMessageToServer(e,t,r):this.queuedRequests.push(e),s}sendMessageToServer(e,t=`${we++}`,s=ke){let{module:r="CORE",...n}=s;this.authToken&&this.connection.send({requestId:t,sessionId:this.sessionId,token:this.authToken,user:"user",module:r,body:e})}handleMessageFromServer(e){let{body:t,requestId:s,sessionId:r}=e,{viewports:n}=this;switch(t.type){case le:this.sendMessageToServer({type:ce,ts:+new Date},"NA");break;case ge:this.sessionId=r,this.pendingLogin?.resolve(r);break;case Z:{let i=n.get(s);if(i){let{viewPortId:u}=t;s!==u&&(n.delete(s),n.set(u,i)),this.mapClientToServerViewport.set(s,u);let c=i.handleSubscribed(t);c&&this.postMessageToClient(c),this.sendMessageToServer({type:oe,vpId:u}),this.sendMessageToServer({type:ae,vpId:u})}}break;case Ve:{let i=this.viewports.get(t.viewPortId);i&&(this.mapClientToServerViewport.delete(i.clientViewportId),n.delete(t.viewPortId))}break;case Ie:let a=this.viewports.get(t.vpId);a&&a.completeOperation(s);break;case J:case te:if(n.has(t.viewPortId)){let i=this.viewports.get(t.viewPortId);if(i){let u=i.completeOperation(s);u&&this.postMessageToClient(u)}}break;case ne:{let i=this.viewports.get(t.viewPortId);if(i){let u=i.completeOperation(s);if(u){this.postMessageToClient(u);let c=i.currentData(),l={type:"viewport-updates",viewports:{[i.clientViewportId]:{rows:c}}};this.postMessageToClient(l)}}}break;case Se:{let{timeStamp:i}=t,[{ts:u}={ts:i}]=t.rows||Fe;for(let c of t.rows){let{viewPortId:l,rowIndex:p,rowKey:V,updateType:C}=c,d=n.get(l);d?d.isTree&&C==="U"&&!V.startsWith("$root")?console.log("Ignore blank rows sent after GroupBy"):d.handleUpdate(C,p,c):console.warn(`TABLE_ROW message received for non registered viewport ${l}`)}this.processUpdates(u)}break;case z:{let i=this.viewports.get(t.viewPortId);if(i){let{from:u,to:c}=t;i.completeOperation(s,u,c)}}break;case he:case Y:break;case j:{let i=this.viewports.get(t.childVpId),u=this.viewports.get(t.parentVpId);if(i&&u){let{childColumnName:c,parentColumnName:l}=t,p=i.completeOperation(s,c,u.clientViewportId,l);p&&this.postMessageToClient(p)}}break;case N:this.postMessageToClient({type:N,tables:t.tables,requestId:s});break;case A:this.postMessageToClient({type:A,table:t.table,columns:t.columns,dataTypes:t.dataTypes,requestId:s});break;case be:{let i=this.getActiveLinks(t.links),u=this.viewports.get(t.vpId);if(i.length&&u){let[c,l]=u.setLinks(i);if(this.postMessageToClient(c),l){let{colName:p,parentViewportId:V,parentColName:C}=l,d=g(),E=this.mapClientToServerViewport.get(V);if(E){let w=u.createLink(d,p,E,C);this.sendMessageToServer(w,d)}}}}break;case ue:if(t.menu.name){let i=this.viewports.get(t.vpId);if(i){let u=i.setMenu(t.menu);this.postMessageToClient(u)}}break;case P:{let{action:i}=t;this.postMessageToClient({type:P,action:i,tableAlreadyOpen:this.isTableOpen(i.table),requestId:s})}break;case L:{let{method:i,result:u}=t;this.postMessageToClient({type:L,method:i,result:u,requestId:s})}break;case"ERROR":console.error(t.msg);break;default:console.log(`handleMessageFromServer ${t.type}.`)}}isTableOpen(e){if(e){let t=e.table;for(let s of this.viewports.values())if(!s.suspended&&s.table.table===t)return!0}}getActiveLinks(e){return e.filter(t=>{let s=this.viewports.get(t.parentVpId);return s&&!s.suspended})}processUpdates(e){let t;this.viewports.forEach(s=>{if(s.hasUpdatesToProcess){let r=s.getClientRows(e),n=s.getNewRowCount();(n!==void 0||r&&r.length>0)&&(t=t||{type:"viewport-updates",viewports:{}},t.viewports[s.clientViewportId]={rows:r,size:n})}t&&this.postMessageToClient(t)})}};var f;async function We(o,e,t,s){let r=await H(o,n=>me(n)?s(n):f.handleMessageFromServer(n));f=new R(r,n=>Ge(n)),r.requiresLogin&&await f.login(e)}var W=0,De=[];function Ge(o){let e=Math.round(performance.now());W&&De.push(e-W),postMessage(o),W=e}var qe=async({data:o})=>{switch(o.type){case"connect":await We(o.url,o.token,o.useWebsocket,postMessage),postMessage({type:"connected"});break;case"subscribe":f.subscribe(o);break;case"unsubscribe":f.unsubscribe(o.viewport);break;default:f.handleMessageFromClient(o)}};self.addEventListener("message",qe);postMessage({type:"ready"});
//# sourceMappingURL=worker.js.map
