// This file was generated by lezer-generator. You probably shouldn't edit it.
import {LRParser} from "@lezer/lr"
export const parser = LRParser.deserialize({
  version: 14,
  states: "%QOVQPOOOOQO'#C_'#C_O_QQO'#C^OOQO'#DP'#DPOyQQO'#C}OOQO'#DS'#DSOVQPO'#CvOOQO'#DO'#DOQOQPOOOOQO'#C`'#C`O!XQQO,58xO!gQPO,59WOVQPO,59^OVQPO,59`O!lQPO,59iO!qQQO,59bOOQO'#DR'#DROOQO1G.d1G.dO!XQQO1G.rO!|QQO1G.xOOQO1G.z1G.zOOQO'#Cx'#CxOOQO1G/T1G/TOOQO1G.|1G.|O#_QPO'#CoO#gQPO7+$^O!XQQO'#CyO#lQPO,59ZOOQO<<Gx<<GxOOQO,59e,59eOOQO-E6w-E6w",
  stateData: "#t~OpOS~OtPOwUO~OTXOUXOVXOWXOXXOYXOZXOaZO~Og[Oi]Ok^OnqX~O[`O]`O^`O_`O~ObbO~OteO~Og[Oi]OxgO~Oi]Ogfikfinfixfi~OdjOecX~OelO~OdjOeca~O",
  goto: "#ZwPPx!O!UPPPPPPPPPPPxPP!XPP![P![P!bP!h!kPPP!q!t!bP#Q!bXROU[]XQOU[]RYQRibXTOU[]XVOU[]Rf^QkhRnkRWOQSOQ_UQc[Rd]QaYQhbRmj",
  nodeNames: "âš  Filter ColumnValueExpression Column Operator Eq NotEq Gt Lt Starts Ends Contains Number String True False ColumnSetExpression In LBrack Values Comma RBrack AndExpression And OrExpression Or ParenthesizedExpression As FilterName",
  maxTerm: 40,
  skippedNodes: [0],
  repeatNodeCount: 1,
  tokenData: ";q~RpXY#VYZ#V]^#Vpq#Vqr#hrs#sxy$kyz$p|}$u!O!P$z!Q![%Y!^!_%e!_!`%j!`!a%o!c!}%t!}#O&]#P#Q&b#R#S%t#T#U&g#U#V%t#V#W(}#W#X%t#X#Y-x#Y#Z0^#Z#]%t#]#^3^#^#c%t#c#d4f#d#g%t#g#h5n#h#i9]#i#o%t~#[Sp~XY#VYZ#V]^#Vpq#V~#kP!_!`#n~#sOU~~#vWOX#sZ]#s^r#srs$`s#O#s#P;'S#s;'S;=`$e<%lO#s~$eO]~~$hP;=`<%l#s~$pOw~~$uOx~~$zOd~~$}P!Q![%Q~%VP[~!Q![%Q~%_Q[~!O!P$z!Q![%Y~%jOW~~%oOT~~%tOV~P%yUtP}!O%t!O!P%t!Q![%t!c!}%t#R#S%t#T#o%t~&bOb~~&gOe~R&lYtP}!O%t!O!P%t!Q![%t!c!}%t#R#S%t#T#b%t#b#c'[#c#g%t#g#h(d#h#o%tR'aWtP}!O%t!O!P%t!Q![%t!c!}%t#R#S%t#T#W%t#W#X'y#X#o%tR(QUgQtP}!O%t!O!P%t!Q![%t!c!}%t#R#S%t#T#o%tR(kUkQtP}!O%t!O!P%t!Q![%t!c!}%t#R#S%t#T#o%tR)SWtP}!O%t!O!P%t!Q![%t!c!}%t#R#S%t#T#c%t#c#d)l#d#o%tR)qWtP}!O%t!O!P%t!Q![%t!c!}%t#R#S%t#T#b%t#b#c*Z#c#o%tR*`WtP}!O%t!O!P%t!Q![%t!c!}%t#R#S%t#T#h%t#h#i*x#i#o%tR*}VtP}!O%t!O!P%t!Q![%t!c!}%t#R#S%t#T#U+d#U#o%tR+iWtP}!O%t!O!P%t!Q![%t!c!}%t#R#S%t#T#]%t#]#^,R#^#o%tR,WWtP}!O%t!O!P%t!Q![%t!c!}%t#R#S%t#T#b%t#b#c,p#c#o%tR,uWtP}!O%t!O!P%t!Q![%t!c!}%t#R#S%t#T#g%t#g#h-_#h#o%tR-fUZQtP}!O%t!O!P%t!Q![%t!c!}%t#R#S%t#T#o%tR-}WtP}!O%t!O!P%t!Q![%t!c!}%t#R#S%t#T#b%t#b#c.g#c#o%tR.lWtP}!O%t!O!P%t!Q![%t!c!}%t#R#S%t#T#W%t#W#X/U#X#o%tR/ZWtP}!O%t!O!P%t!Q![%t!c!}%t#R#S%t#T#g%t#g#h/s#h#o%tR/zUYQtP}!O%t!O!P%t!Q![%t!c!}%t#R#S%t#T#o%tR0cVtP}!O%t!O!P%t!Q![%t!c!}%t#R#S%t#T#U0x#U#o%tR0}WtP}!O%t!O!P%t!Q![%t!c!}%t#R#S%t#T#`%t#`#a1g#a#o%tR1lWtP}!O%t!O!P%t!Q![%t!c!}%t#R#S%t#T#g%t#g#h2U#h#o%tR2ZWtP}!O%t!O!P%t!Q![%t!c!}%t#R#S%t#T#X%t#X#Y2s#Y#o%tR2zU_QtP}!O%t!O!P%t!Q![%t!c!}%t#R#S%t#T#o%tR3cWtP}!O%t!O!P%t!Q![%t!c!}%t#R#S%t#T#b%t#b#c3{#c#o%tR4SUaQtP}!O%t!O!P%t!Q![%t!c!}%t#R#S%t#T#o%tR4kWtP}!O%t!O!P%t!Q![%t!c!}%t#R#S%t#T#f%t#f#g5T#g#o%tR5[UiQtP}!O%t!O!P%t!Q![%t!c!}%t#R#S%t#T#o%tR5sWtP}!O%t!O!P%t!Q![%t!c!}%t#R#S%t#T#h%t#h#i6]#i#o%tR6bVtP}!O%t!O!P%t!Q![%t!c!}%t#R#S%t#T#U6w#U#o%tR6|WtP}!O%t!O!P%t!Q![%t!c!}%t#R#S%t#T#f%t#f#g7f#g#o%tR7kWtP}!O%t!O!P%t!Q![%t!c!}%t#R#S%t#T#h%t#h#i8T#i#o%tR8YWtP}!O%t!O!P%t!Q![%t!c!}%t#R#S%t#T#g%t#g#h8r#h#o%tR8yUXQtP}!O%t!O!P%t!Q![%t!c!}%t#R#S%t#T#o%tR9bWtP}!O%t!O!P%t!Q![%t!c!}%t#R#S%t#T#f%t#f#g9z#g#o%tR:PWtP}!O%t!O!P%t!Q![%t!c!}%t#R#S%t#T#i%t#i#j:i#j#o%tR:nWtP}!O%t!O!P%t!Q![%t!c!}%t#R#S%t#T#X%t#X#Y;W#Y#o%tR;_U^QtP}!O%t!O!P%t!Q![%t!c!}%t#R#S%t#T#o%t",
  tokenizers: [0, 1],
  topRules: {"Filter":[0,1]},
  tokenPrec: 0
})
