.vuuGridLayout {
    display: grid;
    column-gap: var(--col-gap, 6px);
    row-gap: var(--row-gap, 6px);
    height: 100vh;
    width: 100vw;
}

#GridLayoutA {
    --col-gap: 6px;
    --row-gap: 6px;
    
    --vuu-col-bg: rgba(252, 209, 232, 0.4);
    --vuu-row-bg: rgba(252, 209, 232, 0.4);
    
    --col-gutter-count: calc(var(--col-count) - 1);
    --total-col-gutter-width: calc(var(--col-gutter-count) * var(--col-gap));
    --available-width: calc(100% - var(--total-col-gutter-width));
    --percent-width: calc(1 / var(--col-count));
    --column-width: calc(var(--available-width) * var(--percent-width));
    
    --row-gutter-count: calc(var(--row-count) - 1);
    --total-row-gutter-height: calc(var(--row-gutter-count) * var(--row-gap));
    --available-height: calc(100% - var(--total-row-gutter-height));
    --percent-height: calc(1 / var(--row-count));
    --row-height: calc(var(--available-height) * var(--percent-height));
    
    background: 
        repeating-linear-gradient( to right, var(--vuu-col-bg) 0, var(--vuu-col-bg) var(--column-width), white var(--column-width), white calc(var(--column-width) + var(--col-gap)) ),
        repeating-linear-gradient( to bottom, var(--vuu-row-bg) 0, var(--vuu-row-bg) var(--row-height), white var(--row-height), white calc(var(--row-height) + var(--row-gap)) ); 

    grid-template-columns: repeat(var(--col-count), 1fr);
    grid-template-rows: repeat(var(--row-count), 1fr);

    grid-template-areas:
        "l h h h h h h h h h h h h h h h h h h h h h h h"
        "l . . . . . . . . . . . . . . . . . . . . . . ."
        "l . . . . . . . . . . . . . . . . . . . . . . ."
        "l . . . . . . . . . . . . . . . . . . . . . . ."
        "l . . . . . . . . . . . . . . . . . . . . . . ."
        "l . . . . . . . . . . . . . . . . . . . . . . ."
        "l . . . . . . . . . . . . . . . . . . . . . . ."
        "l . . . . . . . . . . . . . . . . . . . . . . ."
        "l . . . . . . . . . . . . . . . . . . . . . . ."
        "l . . . . . . . . . . . . . . . . . . . . . . ."
        "l . . . . . . . . . . . . . . . . . . . . . . ."
        "l . . . . . . . . . . . . . . . . . . . . . . ."
        "l . . . . . . . . . . . . . . . . . . . . . . .";
    
}

.component {
    box-sizing: border-box;
    display: inline-block;
    min-height: 10px;
    min-width: 10px;
    opacity: 0.6;  
    position: relative;
}

#component-A1 {
    background-color: red;  
    grid-area: h;
}
#component-A2 {
    background-color: cyan;    
    grid-area: l;
}
#component-A3 {
    background-color: green;    
    grid-column: 2/-1;
    grid-row: -9/-5   
}
#component-A4 {
    background-color: brown;    
    grid-column: 2/-1;
    grid-row: -13/-9   
}
#component-A5 {
    background-color: black; 
    grid-column: 2/-1;
    grid-row: -5/-1   
}


#GridLayoutB{
    grid-template-columns: 80px repeat(calc(var(--col-count) - 1), 1fr);
    transition: 300ms;
}

#GridLayoutB:has(.resizing){
    transition: none;;
}

#GridLayoutB:has(#component-B2:focus){
    grid-template-columns: 240px repeat(calc(var(--col-count) - 1), 1fr);
}

#component-B1 {
    background-color: red;  
    grid-column: 2/-1;
    grid-row: 1/2   
}
#component-B2 {
    background-color: cyan;    
    grid-column: 1/2;
    grid-row: 1/-1   
}

#component-B3 {
    background-color: green;    
    grid-column: 2/-1;
    grid-row: 2/3   
}
#component-B4 {
    background-color: brown;    
    grid-column: 2/-1;
    grid-row: 3/4   
}
#component-B5 {
    background-color: black; 
    grid-column: 2/-1;
    grid-row: 4/5   
}



[data-resizeable="v"] + [data-resizeable="v"]:before {
    background-color: lightgray;
    content:' ';
    cursor: ns-resize;
    height: 6px;
    left:0;
    position: absolute;
    top:-6px;
    width: 100%;
}

.component.resizing:before {
    background-color: blue;;
}

#GridLayoutC{
    grid-template-columns: 80px repeat(calc(var(--col-count) - 1), 1fr);
    transition: 300ms;
}

#GridLayoutC:has(.resizing){
    transition: none;;
}

#component-C1 {
    background-color: red;  
    grid-column: 2/-1;
    grid-row: 1/2   
}
#component-C2 {
    background-color: cyan;    
    grid-column: 1/2;
    grid-row: 1/-1   
}

#component-C3 {
    background-color: green;    
    grid-column: 2/-2;
    grid-row: 2/3   
}
#component-C4 {
    background-color: brown;    
    grid-column: 2/-2;
    grid-row: 3/4   
}
#component-C5 {
    background-color: black; 
    grid-column: 3/-1;
    grid-row: 2/3   
}
